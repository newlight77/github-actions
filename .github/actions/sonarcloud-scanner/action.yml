name: 'Run code analysis'
description: "An action to run the code analysis"

inputs:
  SONARCLOUD_ADMIN_TOKEN:
    description: an admin token to select a quality gate on a project when running the CI
    required: true
    type: string
  SONAR_TOKEN:
    description: a token to publish metrics
    required: true
    type: string
  SLACK_BOT_TOKEN:
    description: a token to publish metrics
    required: true
    type: string
  project-stack:
    description: the project stack (node | next | react | java | android | ios)
    required: true
    type: string


runs:
  using: "composite"
  steps:
    - name: Use variables
      run: |
        echo "SONARCLOUD_ADMIN_TOKEN : $SONARCLOUD_ADMIN_TOKEN"
        echo "SONAR_TOKEN : $SONAR_TOKEN"
      env:
        SONARCLOUD_ADMIN_TOKEN: ${{ inputs.SONARCLOUD_ADMIN_TOKEN }}
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
      shell: bash
    - name: checkout 🛎️
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: download coverage from unit tests
      uses: actions/download-artifact@v3
      id: download-coverage-from-unit-tests
      with:
        name: coverage-from-unit-tests
      continue-on-error: true
    - name: install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false
    - name: set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'pnpm'
    - name : install dependencies
      run: make install-offline
      shell: bash
    - name : prepare and merge coverage files
      run: make merge-coverage
      shell: bash

    - name: '[bypass quality-gate], if set'
      id: bypass-quality-gate
      uses: newlight77/github-actions/.github/actions/sonarcloud-quality-gate-switch@main
      with:
        sonarcloud-token: ${{ env.SONAR_TOKEN }}
        organization: "thefork"
        project-key: "monorepo-github-actions"
        tmp-gate-id: "91010"
        pr-head-commit: ${{ github.event.pull_request.head.sha }}

    - name: 'Normalize sonar propeties'
      id: sonar-properties
      uses: newlight77/github-actions/.github/actions/sonar-properties@main
      with:
        project-stack: ${{ inputs.project-stack }}

    - name: "override project specific properties"
      run: |
        set +x
        sed -i '/sonar.projectKey=( )*/d' sonar-project.properties
        sed -i '/sonar.host.url=( )*/d' sonar-project.properties
        sed -i '/sonar.projectName=( )*/d' sonar-project.properties
        sed -i '/sonar.projectVersion=( )*/d' sonar-project.properties
        sed -i '/sonar.pullrequest.github.repository=( )*/d' sonar-project.properties
        sed -i '/sonar.pullrequest.provider=( )*/d' sonar-project.properties
        sed -i '/sonar.organization=( )*/d' sonar-project.properties

        echo "" >> sonar-project.properties
        echo "sonar.organization=thefork" >> sonar-project.properties
        echo "sonar.pullrequest.provider=github" >> sonar-project.properties

        echo "sonar.projectName=${{ github.event.repository.name }}" >> sonar-project.properties
        echo "sonar.projectKey=lafourchette_${{ github.event.repository.name }}" >> sonar-project.properties
        echo "sonar.pullrequest.github.repository=lafourchette/${{ github.event.repository.name }}" >> sonar-project.properties

        echo "::group::Sonar Configuration"

        cat sonar-project.properties

        echo "::endgroup::"
      shell: bash

    - name: "overridden sonar properties"
      run: |
        set +x
        echo "::group::Sonar Configuration After"

        echo "<--- beginning --->"
        echo
        cat sonar-project.properties
        echo 
        echo "<--- end --->"

        echo "::endgroup::"
      shell: bash
    
    - name: upload merged sonar-project.properties
      uses: actions/upload-artifact@v3
      with:
        name: merged-sonar-project.properties
        path: |
          sonar-project.properties
        retention-days: 2

    - name: upload sonar exclusions report
      uses: actions/upload-artifact@v3
      with:
        name: sonar-exclusions-report
        path: |
          sonar.exclusions
          sonar.coverage.exclusions
        retention-days: 2

    # - name: run sonarcloud action
    #   uses: SonarSource/sonarcloud-github-action@v2.0.0
    #   env:
    #     SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
    #   with:
    #     project-stack: ${{ inputs.project-stack }}

    - name: slack notification using bypassing if bypass-quality-gate
      if: contains(env.HEAD_COMMIT_MESSAGE, 'bypass-quality-gate')
      uses: slackapi/slack-github-action@v1.22.0
      env:
        SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}
      with:
        channel-id: "C05UA1LUW1H" #ci
        payload: |
          {
            "text": "github workflow",
            "attachments": [
              {
                "color": "warning",
                "pretext": "Quality Gate bypassed",
                "fields": [
                  {
                    "title": "Pull Request",
                    "short": true,
                    "value": "<https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}>"
                  },
                  {
                    "title": "Branch",
                    "value": "${{ github.head_ref || github.ref_name }}",
                    "short": true
                  }
                ],
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "footer": "<https://github.com/${{ github.repository }} | ${{ github.repository }}/pull/${{ github.event.pull_request.number }}>"
              }
            ]
          }
