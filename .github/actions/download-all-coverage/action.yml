name: 'Download coverage files and move to ./coverage. All coverage files must be under ./**/coverage'
description: "An action to download coverage files into to ./coverage. All coverage files must be under ./**/coverage"

inputs:
  with-unit-test:
    description: 'with unit-test'
    required: false
  with-feature-test:
    description: 'with feature-test'
    required: false
  with-smoke-test:
    description: 'with smoke-test'
    required: false


runs:
  using: "composite"
  steps:

    - name: download coverage from unit tests
      if: inputs.with-unit-test == 'true'
      uses: actions/download-artifact@v3
      id: download-coverage-from-unit-test
      with:
        name: coverage-from-unit-test
      continue-on-error: true

    - name : list all unit-test coverage files
      if: inputs.with-unit-test == 'true'
      run: |
        echo "::group::unit-test coverage files"
        export LC_ALL=C

        # find ./ -regextype posix-extended -regex "/(.*\/)?coverage\/(.*)?(lcov.*.info|coverage.*.json|report.*.xml)/gm"
        find ./ -type d -name node_modules -prune \
          -o -regextype posix-extended -regex "(.*/)?coverage/(.*)?(lcov.*.info|coverage.*.json|report.*.xml)" \
          -print

        echo "::endgroup::"
      shell: bash
      continue-on-error: true

    - name: Move unit-test reports under ./coverage/unit
      if: inputs.with-unit-test == 'true'
      run: |
        echo "::group::unit-test move coverage files ./coverage/unit"
        i=0;
        for file in $(find ./ -type d -name node_modules -prune \
          -o -regextype posix-extended -regex "(.*/)?coverage/(.*)?(lcov.*.info|coverage.*.json|report.*.xml)" \
          -print);
        do i=$(( i + 1 ));
          filename=$(basename $file);
          dirname=$(basename $(dirname $(dirname $file)))
          mkdir -p ./coverage/unit ;
          mv $file ./coverage/unit/coverage-unit-$i-$dirname-$filename;
          echo $file ./coverage/unit/coverage-unit-$i-$dirname-$filename;
        done
        echo "::endgroup::"
      shell: bash



    - name: download coverage from feature tests
      if: inputs.with-feature-test == 'true'
      uses: actions/download-artifact@v3
      id: download-coverage-from-feature-tests
      with:
        name: coverage-from-feature-tests
      continue-on-error: true

    - name : list all feature-test coverage files
      if: inputs.with-feature-test == 'true'
      run: |
        echo "::group::feature-test coverage files"
        export LC_ALL=C

        # find ./ -regextype posix-extended -regex "/(.*\/)?coverage\/(.*)?(lcov.*.info|coverage.*.json|report.*.xml)/gm"
        find ./ -type d -name node_modules -prune \
          -o -regextype posix-extended -regex "(.*/)?coverage/feature.*/(lcov.*.info|coverage.*.json|report.*.xml)" \
          -print

        echo "::endgroup::"
      shell: bash
      continue-on-error: true

    - name: Move feature-test reports under ./coverage/feature-*
      if: inputs.with-feature-test == 'true'
      run: |
        echo "::group::feature-test move coverage files ./coverage/feature-*"
        i=0;
        for file in $(find ./ -type d -name node_modules -prune \
          -o -regextype posix-extended -regex "(.*/)?coverage/feature.*/(lcov.*.info|coverage.*.json|report.*.xml)" \
          -print);
        do i=$(( i + 1 ));
          filename=$(basename $file);
          dirname=$(basename $(dirname $(dirname $file)))
          mkdir -p ./coverage/feature ;
          mv $file ./coverage/feature/coverage-feature-$i-$dirname-$filename;
          echo mv $file ./coverage/feature/coverage-feature-$i-$dirname-$filename;
        done
        echo "::endgroup::"
      shell: bash


    - name: download coverage from smoke tests
      if: inputs.with-smoke-test == 'true'
      uses: actions/download-artifact@v3
      id: download-coverage-from-smoke-tests
      with:
        name: coverage-from-smoke-tests
      continue-on-error: true

    - name : list all smoke-test coverage files
      if: inputs.with-smoke-test == 'true'
      run: |
        echo "::group::smoke-test coverage files"
        export LC_ALL=C

        # find ./ -regextype posix-extended -regex "/(.*\/)?coverage\/(.*)?(lcov.*.info|coverage.*.json|report.*.xml)/gm"
        find ./ -type d -name node_modules -prune \
          -o -regextype posix-extended -regex "(.*/)?coverage/smoke*/(lcov.*.info|coverage.*.json|report.*.xml)" \
          -print

        echo "::endgroup::"
      shell: bash
      continue-on-error: true

    - name: Move smoke-test reports under ./coverage/smoke
      if: inputs.with-smoke-test == 'true'
      run: |
        echo "::group::smoke-test move coverage files ./coverage/smoke"
        i=0;
        for file in $(find ./ -type d -name node_modules -prune \
          -o -regextype posix-extended -regex "(.*/)?coverage/smoke*/(lcov.*.info|coverage.*.json|report.*.xml)" \
          -print);
        do i=$(( i + 1 ));
          filename=$(basename $file);
          dirname=$(basename $(dirname $(dirname $file)))
          mkdir -p ./coverage/smoke ;
          mv $file ./coverage/smoke/coverage-smoke-$i-$dirname-$filename;
          echo mv $file ./coverage/smoke/coverage-smoke-$i-$dirname-$filename;
        done
        echo "::endgroup::"
      shell: bash



    - if: steps.download-coverage.outputs.download-path != ''
      run: |
        for file in $(find ./coverage -name '*lcov*.info' -o -name 'coverage*.json' -o -name 'report*.xml');
        do
          echo normalizing coverage file=$file
          sed -i -e 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' $file;
          sed -i -e 's/\/code\//\/github\/workspace\//g' $file;
          sed -i -e 's/\/var\/www\/html\//\/github\/workspace\//g' $file;
        done
      shell: bash
