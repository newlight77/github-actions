name: Default Node CI Workflow

on:
  workflow_call:
    secrets:
      slack-bot-token:
        description: slack bot token
        required: true
      sonar-token:
        description: sonar token
        required: false
      codecov-token:
        description: codecov token
        required: false
    inputs:
      with-unit-test:
        type: boolean
        description: 'with unit-test'
        required: false
        default: true
      with-feature-test:
        type: boolean
        description: 'with feature-test'
        required: false
        default: true
      with-smoke-test:
        type: boolean
        description: 'with smoke-test'
        required: false
        default: true
      with-lint:
        type: boolean
        required: false
        default: true
      coverage-tool:
        description: coverage tool ('', sonar | codecov)
        type: string
        required: false
      slack-room-id:
        type: string
        required: false
        default: C05UA1LUW1H

jobs:
  display-variables:
    name: display ci variables
    runs-on: ubuntu-latest
    environment: CI
    steps:
    - name: Use variables
      run: |
        echo "SLACK_BOT_TOKEN : $SLACK_BOT_TOKEN"
        echo "SONAR_TOKEN : $SONAR_TOKEN"
        echo "CODECOV_TOKEN : $CODECOV_TOKEN"
        echo "LINT : $CODECOV_TLINTOKEN"
        echo "COVERAGE_TOOL : $COVERAGE_TOOL"
        echo "SLACK_ROOM_ID : $SLACK_ROOM_ID"
        # echo "PR_HEAD_SHA : $PR_HEAD_SHA"
        # echo "PR_HEAD_MESSAGE : $PR_HEAD_MESSAGE"
        # echo "PR_HEAD_COMMIT_MESSAGE : $PR_HEAD_COMMIT_MESSAGE"
        # echo "WK_HEAD_COMMIT_MESSAGE : $WK_HEAD_COMMIT_MESSAGE"
        # echo "GITHUB_CONTEXT : $GITHUB_CONTEXT"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }}
        SONAR_TOKEN: ${{ secrets.sonar-token }}
        CODECOV_TOKEN: ${{ secrets.codecov-token }}
        LINT: ${{ inputs.with-lint }}
        COVERAGE_TOOL: ${{ inputs.coverage-tool }}
        SLACK_ROOM_ID: ${{ inputs.slack-room-id }}
        # PR_HEAD: ${{ toJSON(github.event.pull_request.head) }}
        # PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        # PR_HEAD_MESSAGE: ${{ github.event.pull_request.head.message }}
        # PR_HEAD_COMMIT_MESSAGE: ${{ github.event.pull_request.head_commit.message }}
        # WK_HEAD_COMMIT_MESSAGE: ${{ github.event.workflow_run.head_commit.message }}
        # GITHUB_CONTEXT: ${{ toJSON(github) }}


  test-unit:
    runs-on: ubuntu-latest
    steps:
      - name: test-uni
        uses: newlight77/github-actions/.github/actions/test-unit@main


  test-feature:
    runs-on: ubuntu-latest
    steps:
      - name: test-feature
        uses: newlight77/github-actions/.github/actions/test-feature@main


  test-smoke:
    runs-on: ubuntu-latest
    steps:
      - name: test-smoke
        uses: newlight77/github-actions/.github/actions/test-smoke@main


  lint:
    if: inputs.lint == true
    runs-on: ubuntu-latest
    needs:
      - test-unit
      - test-feature
      - test-smoke
    steps:
      - name: Lint
        uses: newlight77/github-actions/.github/actions/lint@main


  codecov:
    if: contains(inputs.coverage-tool, 'codecov')
    runs-on: ubuntu-latest
    needs:
      - test-unit
      - test-feature
      - test-smoke
    environment: CI
    steps:
      - name: Run codecov
        uses: newlight77/github-actions/.github/actions/codecov@main
        with:
          codecov-token: ${{ secrets.codecov-token }}
          with-unit-test: ${{ inputs.with-unit-test }}
          with-feature-test: ${{ inputs.with-feature-test }}
          with-smoke-test: ${{ inputs.with-smoke-test }}


  sonarcloud:
    if: contains(inputs.coverage-tool, 'sonar')
    runs-on: ubuntu-latest
    needs:
      - test-unit
      - test-feature
      - test-smoke
    environment: CI
    steps:
      - name: run sonarcloud scanner
        uses: newlight77/github-actions/.github/actions/sonarcloud-scanner@main
        with:
          slack-bot-token: ${{ secrets.slack-bot-token }}
          sonar-token: ${{ secrets.sonar-token }}
          project-stack: "node"
          with-unit-test: ${{ inputs.with-unit-test }}
          with-feature-test: ${{ inputs.with-feature-test }}
          with-smoke-test: ${{ inputs.with-smoke-test }}


  notify-slack:
    if: ${{inputs.slack-room-id != ''}}
    needs:
      # - codecov
      - sonarcloud
    runs-on: ubuntu-latest
    steps:
      - name: slack notification when CI passed
        uses: newlight77/github-actions/.github/actions/slack-notifier@main
        with:
          slack-bot-token: ${{ secrets.slack-bot-token }}
          channel-id: ${{inputs.slack-room-id}} #ci
          pretext: "CI passed"
